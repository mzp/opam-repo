diff --git a/src/query.ml b/src/query.ml
index cef4342..97eb8ce 100644
--- a/src/query.ml
+++ b/src/query.ml
@@ -44,19 +44,30 @@ struct
   module Db = Db
   let (>>=) = Thread.(>>=)
 
+  let count =
+    let n = ref 0 in
+    fun () ->
+      incr n;
+      !n
+
   let query dbh ?log sql_query =
     let query = Sql.sql_of_query sql_query in
     (match log with
        | None -> ()
        | Some out -> Printf.fprintf out "%s\n%!" query);
-    let name = "query_result" in
+    let name = Printf.sprintf "query_result%d" (count ()) in
     let close_on_error query =
       Thread.catch query (fun exn ->
+        print_endline "some exception";
       Db.close_statement dbh ~name () >>= fun () ->
       Thread.fail exn) in
+    Printf.printf "query name: %s\n" name;
     Db.prepare dbh ~query ~name () >>= fun () ->
+      print_endline "prepared";
     close_on_error (Db.execute dbh ~name ~params:[]) >>= fun result ->
+      print_endline "executed";
     Db.close_statement dbh ~name () >>= fun () ->
+      print_endline "closed";
       let result =
         let nullable = function
           | None -> "NULL"
